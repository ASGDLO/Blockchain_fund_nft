{"version":3,"file":"cubejs-client-core.js","sources":["../src/utils.js","../src/ResultSet.js","../src/SqlQuery.js","../src/Meta.js","../src/ProgressResult.js","../src/HttpTransport.js","../src/RequestError.js","../src/index.js"],"sourcesContent":["import { indexBy, prop, clone, equals } from 'ramda';\n\nexport const DEFAULT_GRANULARITY = 'day';\n\nexport const GRANULARITIES = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport function areQueriesEqual(query1 = {}, query2 = {}) {\n  return (\n    equals(Object.entries((query1 && query1.order) || {}), Object.entries((query2 && query2.order) || {})) &&\n    equals(query1, query2)\n  );\n}\n\nexport function defaultOrder(query) {\n  const granularity = (query.timeDimensions || []).find((d) => d.granularity);\n\n  if (granularity) {\n    return {\n      [granularity.dimension]: 'asc',\n    };\n  } else if ((query.measures || []).length > 0 && (query.dimensions || []).length > 0) {\n    return {\n      [query.measures[0]]: 'desc',\n    };\n  } else if ((query.dimensions || []).length > 0) {\n    return {\n      [query.dimensions[0]]: 'asc',\n    };\n  }\n\n  return {};\n}\n\nexport function defaultHeuristics(newState, oldQuery = {}, options) {\n  const { query, ...props } = clone(newState);\n  const { meta, sessionGranularity } = options;\n  const granularity = sessionGranularity || DEFAULT_GRANULARITY;\n\n  let state = {\n    query,\n    ...props,\n  };\n\n  let newQuery = null;\n  if (!areQueriesEqual(query, oldQuery)) {\n    newQuery = query;\n  }\n\n  if (Array.isArray(newQuery) || Array.isArray(oldQuery)) {\n    return newState;\n  }\n\n  if (newQuery) {\n    if (\n      (oldQuery.timeDimensions || []).length === 1 &&\n      (newQuery.timeDimensions || []).length === 1 &&\n      newQuery.timeDimensions[0].granularity &&\n      oldQuery.timeDimensions[0].granularity !== newQuery.timeDimensions[0].granularity\n    ) {\n      state = {\n        ...state,\n        sessionGranularity: newQuery.timeDimensions[0].granularity,\n      };\n    }\n\n    if (\n      ((oldQuery.measures || []).length === 0 && (newQuery.measures || []).length > 0) ||\n      ((oldQuery.measures || []).length === 1 &&\n        (newQuery.measures || []).length === 1 &&\n        oldQuery.measures[0] !== newQuery.measures[0])\n    ) {\n      const [td] = newQuery.timeDimensions || [];\n      const defaultTimeDimension = meta.defaultTimeDimensionNameFor(newQuery.measures[0]);\n      newQuery = {\n        ...newQuery,\n        timeDimensions: defaultTimeDimension\n          ? [\n            {\n              dimension: defaultTimeDimension,\n              granularity: (td && td.granularity) || granularity,\n              dateRange: td && td.dateRange,\n            },\n          ]\n          : [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: defaultTimeDimension ? 'line' : 'number',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length === 0 && (newQuery.dimensions || []).length > 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({ ...td, granularity: undefined })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: 'table',\n      };\n    }\n\n    if ((oldQuery.dimensions || []).length > 0 && (newQuery.dimensions || []).length === 0) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: td.granularity || granularity,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: (newQuery.timeDimensions || []).length ? 'line' : 'number',\n      };\n    }\n\n    if (\n      ((oldQuery.dimensions || []).length > 0 || (oldQuery.measures || []).length > 0) &&\n      (newQuery.dimensions || []).length === 0 &&\n      (newQuery.measures || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: [],\n        filters: [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        sessionGranularity: null,\n      };\n    }\n    return state;\n  }\n\n  if (state.chartType) {\n    const newChartType = state.chartType;\n    if (\n      (newChartType === 'line' || newChartType === 'area') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      !oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity }],\n        },\n      };\n    }\n\n    if (\n      (newChartType === 'pie' || newChartType === 'table' || newChartType === 'number') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity: undefined }],\n        },\n      };\n    }\n  }\n\n  return state;\n}\n\nexport function isQueryPresent(query) {\n  if (!query) {\n    return false;\n  }\n\n  return (Array.isArray(query) ? query : [query]).every(\n    (q) => (q.measures && q.measures.length) ||\n      (q.dimensions && q.dimensions.length) ||\n      (q.timeDimensions && q.timeDimensions.length)\n  );\n}\n\nexport function movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis) {\n  const nextPivotConfig = {\n    ...pivotConfig,\n    x: [...pivotConfig.x],\n    y: [...pivotConfig.y],\n  };\n  const id = pivotConfig[sourceAxis][sourceIndex];\n  const lastIndex = nextPivotConfig[destinationAxis].length - 1;\n\n  if (id === 'measures') {\n    destinationIndex = lastIndex + 1;\n  } else if (destinationIndex >= lastIndex && nextPivotConfig[destinationAxis][lastIndex] === 'measures') {\n    destinationIndex = lastIndex - 1;\n  }\n\n  nextPivotConfig[sourceAxis].splice(sourceIndex, 1);\n  nextPivotConfig[destinationAxis].splice(destinationIndex, 0, id);\n\n  return nextPivotConfig;\n}\n\nexport function moveItemInArray(list, sourceIndex, destinationIndex) {\n  const result = [...list];\n  const [removed] = result.splice(sourceIndex, 1);\n  result.splice(destinationIndex, 0, removed);\n\n  return result;\n}\n\nexport function flattenFilters(filters = []) {\n  return filters.reduce((memo, filter) => {\n    if (filter.or || filter.and) {\n      return [...memo, ...flattenFilters(filter.or || filter.and)];\n    }\n\n    return [...memo, filter];\n  }, []);\n}\n\nexport function getQueryMembers(query = {}) {\n  const keys = ['measures', 'dimensions', 'segments'];\n  const members = new Set();\n\n  keys.forEach((key) => (query[key] || []).forEach((member) => members.add(member)));\n  (query.timeDimensions || []).forEach((td) => members.add(td.dimension));\n\n  flattenFilters(query.filters).forEach((filter) => members.add(filter.dimension || filter.member));\n\n  return [...members];\n}\n\nexport function getOrderMembersFromOrder(orderMembers, order) {\n  const ids = new Set();\n  const indexedOrderMembers = indexBy(prop('id'), orderMembers);\n  const entries = Array.isArray(order) ? order : Object.entries(order || {});\n  const nextOrderMembers = [];\n\n  entries.forEach(([memberId, currentOrder]) => {\n    if (currentOrder !== 'none' && indexedOrderMembers[memberId]) {\n      ids.add(memberId);\n      nextOrderMembers.push({\n        ...indexedOrderMembers[memberId],\n        order: currentOrder,\n      });\n    }\n  });\n  orderMembers.forEach((member) => {\n    if (!ids.has(member.id)) {\n      nextOrderMembers.push({\n        ...member,\n        order: member.order || 'none',\n      });\n    }\n  });\n\n  return nextOrderMembers;\n}\n\nexport function aliasSeries(values, index, pivotConfig, duplicateMeasures) {\n  const nonNullValues = values.filter((value) => value != null);\n\n  if (pivotConfig && pivotConfig.aliasSeries && pivotConfig.aliasSeries[index]) {\n    return [pivotConfig.aliasSeries[index], ...nonNullValues];\n  } else if (duplicateMeasures.has(nonNullValues[0])) {\n    return [index, ...nonNullValues];\n  }\n\n  return nonNullValues;\n}\n","import dayjs from 'dayjs';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\n\nimport en from 'dayjs/locale/en';\nimport {\n  groupBy, pipe, fromPairs, uniq, filter, map, dropLast, equals, reduce, minBy, maxBy, clone, mergeDeepLeft,\n  pluck, mergeAll, flatten,\n} from 'ramda';\n\nimport { aliasSeries } from './utils';\n\ndayjs.extend(quarterOfYear);\n\n// When granularity is week, weekStart Value must be 1. However, since the client can change it globally (https://day.js.org/docs/en/i18n/changing-locale)\n// So the function below has been added.\nconst internalDayjs = (...args) => dayjs(...args).locale({ ...en, weekStart: 1 });\n\nexport const TIME_SERIES = {\n  day: (range) => range.by('d').map(d => d.format('YYYY-MM-DDT00:00:00.000')),\n  month: (range) => range.snapTo('month').by('M').map(d => d.format('YYYY-MM-01T00:00:00.000')),\n  year: (range) => range.snapTo('year').by('y').map(d => d.format('YYYY-01-01T00:00:00.000')),\n  hour: (range) => range.by('h').map(d => d.format('YYYY-MM-DDTHH:00:00.000')),\n  minute: (range) => range.by('m').map(d => d.format('YYYY-MM-DDTHH:mm:00.000')),\n  second: (range) => range.by('s').map(d => d.format('YYYY-MM-DDTHH:mm:ss.000')),\n  week: (range) => range.snapTo('week').by('w').map(d => d.startOf('week').format('YYYY-MM-DDT00:00:00.000')),\n  quarter: (range) => range.snapTo('quarter').by('quarter').map(d => d.startOf('quarter').format('YYYY-MM-DDT00:00:00.000')),\n};\n\nconst DateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nconst LocalDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z?$/;\n\nconst groupByToPairs = (keyFn) => {\n  const acc = new Map();\n\n  return (data) => {\n    data.forEach((row) => {\n      const key = keyFn(row);\n\n      if (!acc.has(key)) {\n        acc.set(key, []);\n      }\n\n      acc.get(key).push(row);\n    });\n\n    return Array.from(acc.entries());\n  };\n};\n\nconst unnest = (arr) => {\n  const res = [];\n  arr.forEach((subArr) => {\n    subArr.forEach(element => res.push(element));\n  });\n\n  return res;\n};\n\nexport const dayRange = (from, to) => ({\n  by: (value) => {\n    const results = [];\n\n    let start = internalDayjs(from);\n    const end = internalDayjs(to);\n\n    while (start.isBefore(end) || start.isSame(end)) {\n      results.push(start);\n      start = start.add(1, value);\n    }\n\n    return results;\n  },\n  snapTo: (value) => dayRange(internalDayjs(from).startOf(value), internalDayjs(to).endOf(value)),\n  start: internalDayjs(from),\n  end: internalDayjs(to),\n});\n\nexport const QUERY_TYPE = {\n  REGULAR_QUERY: 'regularQuery',\n  COMPARE_DATE_RANGE_QUERY: 'compareDateRangeQuery',\n  BLENDING_QUERY: 'blendingQuery',\n};\n\nclass ResultSet {\n  static measureFromAxis(axisValues) {\n    return axisValues[axisValues.length - 1];\n  }\n\n  static timeDimensionMember(td) {\n    return `${td.dimension}.${td.granularity}`;\n  }\n\n  static deserialize(data, options = {}) {\n    return new ResultSet(data.loadResponse, options);\n  }\n\n  constructor(loadResponse, options = {}) {\n    this.loadResponse = loadResponse;\n\n    if (this.loadResponse.queryType != null) {\n      this.queryType = loadResponse.queryType;\n      this.loadResponses = loadResponse.results;\n    } else {\n      this.queryType = QUERY_TYPE.REGULAR_QUERY;\n      this.loadResponse.pivotQuery = {\n        ...loadResponse.query,\n        queryType: this.queryType\n      };\n      this.loadResponses = [loadResponse];\n    }\n\n    if (!Object.values(QUERY_TYPE).includes(this.queryType)) {\n      throw new Error('Unknown query type');\n    }\n\n    this.parseDateMeasures = options.parseDateMeasures;\n    this.options = options;\n\n    this.backwardCompatibleData = [];\n  }\n\n  drillDown(drillDownLocator, pivotConfig) {\n    if (this.queryType === QUERY_TYPE.COMPARE_DATE_RANGE_QUERY) {\n      throw new Error('compareDateRange drillDown query is not currently supported');\n    }\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      throw new Error('Data blending drillDown query is not currently supported');\n    }\n\n    const { xValues = [], yValues = [] } = drillDownLocator;\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig);\n\n    const values = [];\n    normalizedPivotConfig.x.forEach((member, currentIndex) => values.push([member, xValues[currentIndex]]));\n    normalizedPivotConfig.y.forEach((member, currentIndex) => values.push([member, yValues[currentIndex]]));\n\n    const { filters: parentFilters = [], segments = [] } = this.query();\n    const { measures } = this.loadResponses[0].annotation;\n    let [, measureName] = values.find(([member]) => member === 'measures') || [];\n\n    if (measureName === undefined) {\n      [measureName] = Object.keys(measures);\n    }\n\n    if (!(measures[measureName] && measures[measureName].drillMembers || []).length) {\n      return null;\n    }\n\n    const filters = [\n      {\n        member: measureName,\n        operator: 'measureFilter',\n      },\n      ...parentFilters\n    ];\n    const timeDimensions = [];\n\n    values.filter(([member]) => member !== 'measures')\n      .forEach(([member, value]) => {\n        const [cubeName, dimension, granularity] = member.split('.');\n\n        if (granularity !== undefined) {\n          const range = dayRange(value, value).snapTo(granularity);\n\n          timeDimensions.push({\n            dimension: [cubeName, dimension].join('.'),\n            dateRange: [\n              range.start,\n              range.end\n            ].map((dt) => dt.format('YYYY-MM-DDTHH:mm:ss.SSS')),\n          });\n        } else if (value == null) {\n          filters.push({\n            member,\n            operator: 'notSet',\n          });\n        } else {\n          filters.push({\n            member,\n            operator: 'equals',\n            values: [value.toString()],\n          });\n        }\n      });\n\n    const { query } = this.loadResponses[0];\n    if (\n      timeDimensions.length === 0 &&\n      query.timeDimensions.length > 0 &&\n      query.timeDimensions[0].granularity == null\n    ) {\n      timeDimensions.push(query.timeDimensions[0]);\n    }\n\n    return {\n      ...measures[measureName].drillMembersGrouped,\n      filters,\n      ...(segments.length > 0 ? { segments } : {}),\n      timeDimensions,\n      segments,\n      timezone: query.timezone\n    };\n  }\n\n  series(pivotConfig) {\n    return this.seriesNames(pivotConfig).map(({ title, key }) => ({\n      title,\n      key,\n      series: this.chartPivot(pivotConfig).map(({ x, ...obj }) => ({ value: obj[key], x }))\n    }));\n  }\n\n  axisValues(axis, resultIndex = 0) {\n    const { query } = this.loadResponses[resultIndex];\n\n    return row => {\n      const value = (measure) => axis.filter(d => d !== 'measures')\n        .map(d => (row[d] != null ? row[d] : null)).concat(measure ? [measure] : []);\n\n      if (axis.find(d => d === 'measures') && (query.measures || []).length) {\n        return query.measures.map(value);\n      }\n\n      return [value()];\n    };\n  }\n\n  axisValuesString(axisValues, delimiter) {\n    const formatValue = (v) => {\n      if (v == null) {\n        return '∅';\n      } else if (v === '') {\n        return '[Empty string]';\n      } else {\n        return v;\n      }\n    };\n    return axisValues.map(formatValue).join(delimiter || ', ');\n  }\n\n  static getNormalizedPivotConfig(query = {}, pivotConfig = null) {\n    const defaultPivotConfig = {\n      x: [],\n      y: [],\n      fillMissingDates: true,\n      joinDateRange: false\n    };\n\n    const {\n      measures = [],\n      dimensions = []\n    } = query;\n\n    const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n\n    pivotConfig = pivotConfig || (timeDimensions.length ? {\n      x: timeDimensions.map(td => ResultSet.timeDimensionMember(td)),\n      y: dimensions\n    } : {\n      x: dimensions,\n      y: []\n    });\n\n    pivotConfig = mergeDeepLeft(pivotConfig, defaultPivotConfig);\n\n    const substituteTimeDimensionMembers = axis => axis.map(\n      subDim => (\n        (\n          timeDimensions.find(td => td.dimension === subDim) &&\n          !dimensions.find(d => d === subDim)\n        ) ?\n          ResultSet.timeDimensionMember(query.timeDimensions.find(td => td.dimension === subDim)) :\n          subDim\n      )\n    );\n\n    pivotConfig.x = substituteTimeDimensionMembers(pivotConfig.x);\n    pivotConfig.y = substituteTimeDimensionMembers(pivotConfig.y);\n\n    const allIncludedDimensions = pivotConfig.x.concat(pivotConfig.y);\n    const allDimensions = timeDimensions.map(td => ResultSet.timeDimensionMember(td)).concat(dimensions);\n\n    const dimensionFilter = (key) => allDimensions.includes(key) || key === 'measures';\n\n    pivotConfig.x = pivotConfig.x.concat(\n      allDimensions.filter(d => !allIncludedDimensions.includes(d) && d !== 'compareDateRange')\n    )\n      .filter(dimensionFilter);\n    pivotConfig.y = pivotConfig.y.filter(dimensionFilter);\n\n    if (!pivotConfig.x.concat(pivotConfig.y).find(d => d === 'measures')) {\n      pivotConfig.y.push('measures');\n    }\n\n    if (dimensions.includes('compareDateRange') && !pivotConfig.y.concat(pivotConfig.x).includes('compareDateRange')) {\n      pivotConfig.y.unshift('compareDateRange');\n    }\n\n    if (!measures.length) {\n      pivotConfig.x = pivotConfig.x.filter(d => d !== 'measures');\n      pivotConfig.y = pivotConfig.y.filter(d => d !== 'measures');\n    }\n\n    return pivotConfig;\n  }\n\n  normalizePivotConfig(pivotConfig) {\n    return ResultSet.getNormalizedPivotConfig(this.loadResponse.pivotQuery, pivotConfig);\n  }\n\n  timeSeries(timeDimension, resultIndex) {\n    if (!timeDimension.granularity) {\n      return null;\n    }\n\n    let { dateRange } = timeDimension;\n\n    if (!dateRange) {\n      const member = ResultSet.timeDimensionMember(timeDimension);\n      const dates = pipe(\n        map(row => row[member] && internalDayjs(row[member])),\n        filter(Boolean)\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      dateRange = dates.length && [\n        reduce(minBy(d => d.toDate()), dates[0], dates),\n        reduce(maxBy(d => d.toDate()), dates[0], dates)\n      ] || null;\n    }\n\n    if (!dateRange) {\n      return null;\n    }\n\n    const padToDay = timeDimension.dateRange ?\n      timeDimension.dateRange.find(d => d.match(DateRegex)) :\n      !['hour', 'minute', 'second'].includes(timeDimension.granularity);\n\n    const [start, end] = dateRange;\n    const range = dayRange(start, end);\n\n    if (!TIME_SERIES[timeDimension.granularity]) {\n      throw new Error(`Unsupported time granularity: ${timeDimension.granularity}`);\n    }\n\n    return TIME_SERIES[timeDimension.granularity](\n      padToDay ? range.snapTo('d') : range\n    );\n  }\n\n  pivot(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const { pivotQuery: query } = this.loadResponse;\n\n    const pivotImpl = (resultIndex = 0) => {\n      let groupByXAxis = groupByToPairs(({ xValues }) => this.axisValuesString(xValues));\n\n      const measureValue = (row, measure) => row[measure] || 0;\n\n      if (\n        pivotConfig.fillMissingDates &&\n        pivotConfig.x.length === 1 &&\n        (equals(\n          pivotConfig.x,\n          (query.timeDimensions || [])\n            .filter(td => Boolean(td.granularity))\n            .map(td => ResultSet.timeDimensionMember(td))\n        ))\n      ) {\n        const series = this.loadResponses.map(\n          (loadResponse) => this.timeSeries(loadResponse.query.timeDimensions[0], resultIndex)\n        );\n\n        if (series[0]) {\n          groupByXAxis = (rows) => {\n            const byXValues = groupBy(\n              ({ xValues }) => xValues[0],\n              rows\n            );\n            return series[resultIndex].map(d => [d, byXValues[d] || [{ xValues: [d], row: {} }]]);\n          };\n        }\n      }\n\n      const xGrouped = pipe(\n        map(row => this.axisValues(pivotConfig.x, resultIndex)(row).map(xValues => ({ xValues, row }))),\n        unnest,\n        groupByXAxis\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      const yValuesMap = {};\n      xGrouped.forEach(([, rows]) => {\n        rows.forEach(({ row }) => {\n          this.axisValues(pivotConfig.y, resultIndex)(row).forEach((values) => {\n            if (Object.keys(row).length > 0) {\n              yValuesMap[values.join()] = values;\n            }\n          });\n        });\n      });\n      const allYValues = Object.values(yValuesMap);\n\n      const measureOnX = Boolean(pivotConfig.x.find(d => d === 'measures'));\n\n      return xGrouped.map(([, rows]) => {\n        const { xValues } = rows[0];\n        const yGrouped = {};\n\n        rows.forEach(({ row }) => {\n          const arr = this.axisValues(pivotConfig.y, resultIndex)(row).map(yValues => ({ yValues, row }));\n          arr.forEach((res) => {\n            yGrouped[this.axisValuesString(res.yValues)] = res;\n          });\n        });\n\n        return {\n          xValues,\n          yValuesArray: unnest(allYValues.map(yValues => {\n            const measure = measureOnX ?\n              ResultSet.measureFromAxis(xValues) :\n              ResultSet.measureFromAxis(yValues);\n\n            return [[yValues, measureValue((yGrouped[this.axisValuesString(yValues)] ||\n              ({ row: {} })).row, measure)]];\n          }))\n        };\n      });\n    };\n\n    const pivots = this.loadResponses.length > 1\n      ? this.loadResponses.map((_, index) => pivotImpl(index))\n      : [];\n\n    return pivots.length\n      ? this.mergePivots(pivots, pivotConfig.joinDateRange)\n      : pivotImpl();\n  }\n\n  mergePivots(pivots, joinDateRange) {\n    const minLengthPivot = pivots.reduce(\n      (memo, current) => (memo != null && current.length >= memo.length ? memo : current), null\n    );\n\n    return minLengthPivot.map((_, index) => {\n      const xValues = joinDateRange\n        ? [pivots.map((pivot) => pivot[index] && pivot[index].xValues || []).join(', ')]\n        : minLengthPivot[index].xValues;\n\n      return {\n        xValues,\n        yValuesArray: unnest(pivots.map((pivot) => pivot[index].yValuesArray))\n      };\n    });\n  }\n\n  pivotedRows(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  chartPivot(pivotConfig) {\n    const validate = (value) => {\n      if (this.parseDateMeasures && LocalDateRegex.test(value)) {\n        return new Date(value);\n      } else if (!Number.isNaN(Number.parseFloat(value))) {\n        return Number.parseFloat(value);\n      }\n\n      return value;\n    };\n\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return this.pivot(pivotConfig).map(({ xValues, yValuesArray }) => {\n      const yValuesMap = {};\n\n      yValuesArray\n        .forEach(([yValues, m], i) => {\n          yValuesMap[this.axisValuesString(aliasSeries(yValues, i, pivotConfig, duplicateMeasures), ',')] = m && validate(m);\n        });\n\n      return ({\n        x: this.axisValuesString(xValues, ','),\n        xValues,\n        ...yValuesMap\n      });\n    });\n  }\n\n  tablePivot(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const isMeasuresPresent = normalizedPivotConfig.x.concat(normalizedPivotConfig.y).includes('measures');\n\n    return this.pivot(normalizedPivotConfig).map(({ xValues, yValuesArray }) => fromPairs(\n      normalizedPivotConfig.x\n        .map((key, index) => [key, xValues[index]])\n        .concat(\n          isMeasuresPresent ? yValuesArray.map(([yValues, measure]) => [\n            yValues.length ? yValues.join() : 'value',\n            measure\n          ]) : []\n        )\n    ));\n  }\n\n  tableColumns(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const annotations = pipe(\n      pluck('annotation'),\n      reduce(mergeDeepLeft(), {})\n    )(this.loadResponses);\n    const flatMeta = Object.values(annotations).reduce((a, b) => ({ ...a, ...b }), {});\n    const schema = {};\n\n    const extractFields = (key) => {\n      const { title, shortTitle, type, format, meta } = flatMeta[key] || {};\n\n      return {\n        key,\n        title,\n        shortTitle,\n        type,\n        format,\n        meta\n      };\n    };\n\n    const pivot = this.pivot(normalizedPivotConfig);\n\n    (pivot[0] && pivot[0].yValuesArray || []).forEach(([yValues]) => {\n      if (yValues.length > 0) {\n        let currentItem = schema;\n\n        yValues.forEach((value, index) => {\n          currentItem[`_${value}`] = {\n            key: value,\n            memberId: normalizedPivotConfig.y[index] === 'measures'\n              ? value\n              : normalizedPivotConfig.y[index],\n            children: (currentItem[`_${value}`] && currentItem[`_${value}`].children) || {}\n          };\n\n          currentItem = currentItem[`_${value}`].children;\n        });\n      }\n    });\n\n    const toColumns = (item = {}, path = []) => {\n      if (Object.keys(item).length === 0) {\n        return [];\n      }\n\n      return Object.values(item).map(({ key, ...currentItem }) => {\n        const children = toColumns(currentItem.children, [\n          ...path,\n          key\n        ]);\n\n        const { title, shortTitle, ...fields } = extractFields(currentItem.memberId);\n\n        const dimensionValue = key !== currentItem.memberId || title == null ? key : '';\n\n        if (!children.length) {\n          return {\n            ...fields,\n            key,\n            dataIndex: [...path, key].join(),\n            title: [title, dimensionValue].join(' ').trim(),\n            shortTitle: dimensionValue || shortTitle,\n          };\n        }\n\n        return {\n          ...fields,\n          key,\n          title: [title, dimensionValue].join(' ').trim(),\n          shortTitle: dimensionValue || shortTitle,\n          children,\n        };\n      });\n    };\n\n    let otherColumns = [];\n\n    if (!pivot.length && normalizedPivotConfig.y.includes('measures')) {\n      otherColumns = (this.loadResponses[0].query.measures || []).map(\n        (key) => ({ ...extractFields(key), dataIndex: key })\n      );\n    }\n\n    // Syntatic column to display the measure value\n    if (!normalizedPivotConfig.y.length && normalizedPivotConfig.x.includes('measures')) {\n      otherColumns.push({\n        key: 'value',\n        dataIndex: 'value',\n        title: 'Value',\n        shortTitle: 'Value',\n        type: 'string',\n      });\n    }\n\n    return normalizedPivotConfig.x\n      .map((key) => {\n        if (key === 'measures') {\n          return {\n            key: 'measures',\n            dataIndex: 'measures',\n            title: 'Measures',\n            shortTitle: 'Measures',\n            type: 'string',\n          };\n        }\n\n        return ({ ...extractFields(key), dataIndex: key });\n      })\n      .concat(toColumns(schema))\n      .concat(otherColumns);\n  }\n\n  totalRow(pivotConfig) {\n    return this.chartPivot(pivotConfig)[0];\n  }\n\n  categories(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  seriesNames(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const measures = pipe(\n      pluck('annotation'),\n      pluck('measures'),\n      mergeAll\n    )(this.loadResponses);\n\n    const seriesNames = unnest(this.loadResponses.map((_, index) => pipe(\n      map(this.axisValues(pivotConfig.y, index)),\n      unnest,\n      uniq\n    )(\n      this.timeDimensionBackwardCompatibleData(index)\n    )));\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return seriesNames.map((axisValues, i) => {\n      const aliasedAxis = aliasSeries(axisValues, i, pivotConfig, duplicateMeasures);\n      return {\n        title: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].title\n            ) :\n            aliasedAxis, ', '\n        ),\n        key: this.axisValuesString(aliasedAxis, ','),\n        yValues: axisValues\n      };\n    });\n  }\n\n  query() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].query;\n  }\n\n  pivotQuery() {\n    return this.loadResponse.pivotQuery || null;\n  }\n\n  rawData() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].data;\n  }\n\n  annotation() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].annotation;\n  }\n\n  timeDimensionBackwardCompatibleData(resultIndex) {\n    if (resultIndex === undefined) {\n      throw new Error('resultIndex is required');\n    }\n\n    if (!this.backwardCompatibleData[resultIndex]) {\n      const { data, query } = this.loadResponses[resultIndex];\n      const timeDimensions = (query.timeDimensions || []).filter(td => Boolean(td.granularity));\n\n      this.backwardCompatibleData[resultIndex] = data.map(row => (\n        {\n          ...row,\n          ...(\n            fromPairs(Object.keys(row)\n              .filter(\n                field => timeDimensions.find(d => d.dimension === field) &&\n                  !row[ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field))]\n              ).map(field => (\n                [ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field)), row[field]]\n              )))\n          )\n        }\n      ));\n    }\n\n    return this.backwardCompatibleData[resultIndex];\n  }\n\n  decompose() {\n    return this.loadResponses.map((result) => new ResultSet({\n      queryType: QUERY_TYPE.REGULAR_QUERY,\n      pivotQuery: {\n        ...result.query,\n        queryType: QUERY_TYPE.REGULAR_QUERY,\n      },\n      results: [result]\n    }, this.options));\n  }\n\n  serialize() {\n    return {\n      loadResponse: clone(this.loadResponse)\n    };\n  }\n}\n\nexport default ResultSet;\n","export default class SqlQuery {\n  constructor(sqlQuery) {\n    this.sqlQuery = sqlQuery;\n  }\n\n  rawQuery() {\n    return this.sqlQuery.sql;\n  }\n\n  sql() {\n    return this.rawQuery().sql[0];\n  }\n}\n","/**\n * @module @cubejs-client/core\n */\n\nimport { unnest, fromPairs } from 'ramda';\n\nconst memberMap = (memberArray) => fromPairs(memberArray.map((m) => [m.name, m]));\n\nconst operators = {\n  string: [\n    { name: 'contains', title: 'contains' },\n    { name: 'notContains', title: 'does not contain' },\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n  ],\n  number: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'gt', title: '>' },\n    { name: 'gte', title: '>=' },\n    { name: 'lt', title: '<' },\n    { name: 'lte', title: '<=' },\n  ],\n  time: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'inDateRange', title: 'in date range' },\n    { name: 'notInDateRange', title: 'not in date range' },\n    { name: 'afterDate', title: 'after date' },\n    { name: 'beforeDate', title: 'before date' },\n  ],\n};\n\n/**\n * Contains information about available cubes and it's members.\n */\nclass Meta {\n  constructor(metaResponse) {\n    this.meta = metaResponse;\n    const { cubes } = this.meta;\n    this.cubes = cubes;\n    this.cubesMap = fromPairs(\n      cubes.map((c) => [\n        c.name,\n        {\n          measures: memberMap(c.measures),\n          dimensions: memberMap(c.dimensions),\n          segments: memberMap(c.segments),\n        },\n      ])\n    );\n  }\n\n  membersForQuery(query, memberType) {\n    return unnest(this.cubes.map((c) => c[memberType])).sort((a, b) => (a.title > b.title ? 1 : -1));\n  }\n\n  membersGroupedByCube() {\n    const memberKeys = ['measures', 'dimensions', 'segments', 'timeDimensions'];\n\n    return this.cubes.reduce(\n      (memo, cube) => {\n        memberKeys.forEach((key) => {\n          let members = cube[key];\n\n          if (key === 'timeDimensions') {\n            members = cube.dimensions.filter((m) => m.type === 'time');\n          }\n\n          memo[key] = [\n            ...memo[key],\n            {\n              cubeName: cube.name,\n              cubeTitle: cube.title,\n              members\n            },\n          ];\n        });\n\n        return memo;\n      },\n      {\n        measures: [],\n        dimensions: [],\n        segments: [],\n        timeDimensions: [],\n      }\n    );\n  }\n\n  resolveMember(memberName, memberType) {\n    const [cube] = memberName.split('.');\n\n    if (!this.cubesMap[cube]) {\n      return { title: memberName, error: `Cube not found ${cube} for path '${memberName}'` };\n    }\n\n    const memberTypes = Array.isArray(memberType) ? memberType : [memberType];\n    const member = memberTypes\n      .map((type) => this.cubesMap[cube][type] && this.cubesMap[cube][type][memberName])\n      .find((m) => m);\n\n    if (!member) {\n      return {\n        title: memberName,\n        error: `Path not found '${memberName}'`,\n      };\n    }\n\n    return member;\n  }\n\n  defaultTimeDimensionNameFor(memberName) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return null;\n    }\n    return Object.keys(this.cubesMap[cube].dimensions || {}).find(\n      (d) => this.cubesMap[cube].dimensions[d].type === 'time'\n    );\n  }\n\n  filterOperatorsForMember(memberName, memberType) {\n    const member = this.resolveMember(memberName, memberType);\n\n    return operators[member.type] || operators.string;\n  }\n}\n\nexport default Meta;\n","export default class ProgressResult {\n  constructor(progressResponse) {\n    this.progressResponse = progressResponse;\n  }\n\n  stage() {\n    return this.progressResponse.stage;\n  }\n\n  timeElapsed() {\n    return this.progressResponse.timeElapsed;\n  }\n}\n","import fetch from 'cross-fetch';\nimport 'url-search-params-polyfill';\n\nclass HttpTransport {\n  constructor({ authorization, apiUrl, method, headers = {}, credentials }) {\n    this.authorization = authorization;\n    this.apiUrl = apiUrl;\n    this.method = method;\n    this.headers = headers;\n    this.credentials = credentials;\n  }\n\n  request(method, { baseRequestId, ...params }) {\n    let spanCounter = 1;\n    const searchParams = new URLSearchParams(\n      params && Object.keys(params)\n        .map(k => ({ [k]: typeof params[k] === 'object' ? JSON.stringify(params[k]) : params[k] }))\n        .reduce((a, b) => ({ ...a, ...b }), {})\n    );\n\n    let url = `${this.apiUrl}/${method}${searchParams.toString().length ? `?${searchParams}` : ''}`;\n\n    const requestMethod = this.method || (url.length < 2000 ? 'GET' : 'POST');\n    if (requestMethod === 'POST') {\n      url = `${this.apiUrl}/${method}`;\n      this.headers['Content-Type'] = 'application/json';\n    }\n\n    // Currently, all methods make GET requests. If a method makes a request with a body payload,\n    // remember to add {'Content-Type': 'application/json'} to the header.\n    const runRequest = () => fetch(url, {\n      method: requestMethod,\n      headers: {\n        Authorization: this.authorization,\n        'x-request-id': baseRequestId && `${baseRequestId}-span-${spanCounter++}`,\n        ...this.headers\n      },\n      credentials: this.credentials,\n      body: requestMethod === 'POST' ? JSON.stringify(params) : null\n    });\n\n    return {\n      /* eslint no-unsafe-finally: off */\n      async subscribe(callback) {\n        let result = {\n          error: 'network Error' // add default error message\n        };\n        try {\n          result = await runRequest();\n        } finally {\n          return callback(result, () => this.subscribe(callback));\n        }\n      }\n    };\n  }\n}\n\nexport default HttpTransport;\n","export default class RequestError extends Error {\n  constructor(message, response, status) {\n    super(message);\n    this.response = response;\n    this.status = status;\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport ResultSet from './ResultSet';\nimport SqlQuery from './SqlQuery';\nimport Meta from './Meta';\nimport ProgressResult from './ProgressResult';\nimport HttpTransport from './HttpTransport';\nimport RequestError from './RequestError';\n\nlet mutexCounter = 0;\n\nconst MUTEX_ERROR = 'Mutex has been changed';\n\n/**\n * Query result dataset formats enum.\n */\nconst ResultType = {\n  DEFAULT: 'default',\n  COMPACT: 'compact'\n};\n\nfunction mutexPromise(promise) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      resolve(await promise);\n    } catch (error) {\n      if (error !== MUTEX_ERROR) {\n        reject(error);\n      }\n    }\n  });\n}\n\nclass CubejsApi {\n  constructor(apiToken, options) {\n    if (apiToken !== null && !Array.isArray(apiToken) && typeof apiToken === 'object') {\n      options = apiToken;\n      apiToken = undefined;\n    }\n    options = options || {};\n\n    if (!options.transport && !options.apiUrl) {\n      throw new Error('The `apiUrl` option is required');\n    }\n\n    this.apiToken = apiToken;\n    this.apiUrl = options.apiUrl;\n    this.method = options.method;\n    this.headers = options.headers || {};\n    this.credentials = options.credentials;\n    this.transport = options.transport || new HttpTransport({\n      authorization: typeof apiToken === 'function' ? undefined : apiToken,\n      apiUrl: this.apiUrl,\n      method: this.method,\n      headers: this.headers,\n      credentials: this.credentials\n    });\n    this.pollInterval = options.pollInterval || 5;\n    this.parseDateMeasures = options.parseDateMeasures;\n\n    this.updateAuthorizationPromise = null;\n  }\n\n  request(method, params) {\n    return this.transport.request(method, {\n      baseRequestId: uuidv4(),\n      ...params\n    });\n  }\n\n  loadMethod(request, toResult, options, callback) {\n    const mutexValue = ++mutexCounter;\n    if (typeof options === 'function' && !callback) {\n      callback = options;\n      options = undefined;\n    }\n\n    options = options || {};\n\n    const mutexKey = options.mutexKey || 'default';\n    if (options.mutexObj) {\n      options.mutexObj[mutexKey] = mutexValue;\n    }\n\n    const requestPromise = this\n      .updateTransportAuthorization()\n      .then(() => request());\n\n    let skipAuthorizationUpdate = true;\n    let unsubscribed = false;\n\n    const checkMutex = async () => {\n      const requestInstance = await requestPromise;\n\n      if (\n        options.mutexObj &&\n        options.mutexObj[mutexKey] !== mutexValue\n      ) {\n        unsubscribed = true;\n        if (requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        throw MUTEX_ERROR;\n      }\n    };\n\n    const loadImpl = async (response, next) => {\n      const requestInstance = await requestPromise;\n\n      const subscribeNext = async () => {\n        if (options.subscribe && !unsubscribed) {\n          if (requestInstance.unsubscribe) {\n            return next();\n          } else {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n            return next();\n          }\n        }\n        return null;\n      };\n\n      const continueWait = async (wait) => {\n        if (!unsubscribed) {\n          if (wait) {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n          }\n          return next();\n        }\n        return null;\n      };\n\n      if (options.subscribe && !skipAuthorizationUpdate) {\n        await this.updateTransportAuthorization();\n      }\n\n      skipAuthorizationUpdate = false;\n\n      if (response.status === 502) {\n        await checkMutex();\n        return continueWait(true);\n      }\n\n      let body = {};\n      let text = '';\n      try {\n        text = await response.text();\n        body = JSON.parse(text);\n      } catch (_) {\n        body.error = text;\n      }\n\n      if (body.error === 'Continue wait') {\n        await checkMutex();\n        if (options.progressCallback) {\n          options.progressCallback(new ProgressResult(body));\n        }\n        return continueWait();\n      }\n\n      if (response.status !== 200) {\n        await checkMutex();\n        if (!options.subscribe && requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n\n        const error = new RequestError(body.error, body, response.status); // TODO error class\n        if (callback) {\n          callback(error);\n        } else {\n          throw error;\n        }\n\n        return subscribeNext();\n      }\n      await checkMutex();\n      if (!options.subscribe && requestInstance.unsubscribe) {\n        await requestInstance.unsubscribe();\n      }\n      const result = toResult(body);\n      if (callback) {\n        callback(null, result);\n      } else {\n        return result;\n      }\n\n      return subscribeNext();\n    };\n\n    const promise = requestPromise.then(requestInstance => mutexPromise(requestInstance.subscribe(loadImpl)));\n\n    if (callback) {\n      return {\n        unsubscribe: async () => {\n          const requestInstance = await requestPromise;\n\n          unsubscribed = true;\n          if (requestInstance.unsubscribe) {\n            return requestInstance.unsubscribe();\n          }\n          return null;\n        }\n      };\n    } else {\n      return promise;\n    }\n  }\n\n  async updateTransportAuthorization() {\n    if (this.updateAuthorizationPromise) {\n      await this.updateAuthorizationPromise;\n      return;\n    }\n\n    if (typeof this.apiToken === 'function') {\n      this.updateAuthorizationPromise = new Promise(async (resolve, reject) => {\n        try {\n          const token = await this.apiToken();\n          if (this.transport.authorization !== token) {\n            this.transport.authorization = token;\n          }\n          resolve();\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.updateAuthorizationPromise = null;\n        }\n      });\n\n      await this.updateAuthorizationPromise;\n    }\n  }\n\n  /**\n   * Add system properties to a query object.\n   * @param {Query} query\n   * @param {string} responseFormat\n   * @returns {void}\n   * @private\n   */\n  patchQueryInternal(query, responseFormat) {\n    if (\n      responseFormat === ResultType.COMPACT &&\n      query.responseFormat !== ResultType.COMPACT\n    ) {\n      return {\n        ...query,\n        responseFormat: ResultType.COMPACT,\n      };\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * Process result fetched from the gateway#load method according\n   * to the network protocol.\n   * @param {*} response\n   * @returns ResultSet\n   * @private\n   */\n  loadResponseInternal(response) {\n    if (\n      response.results.length &&\n      response.results[0].query.responseFormat &&\n      response.results[0].query.responseFormat === ResultType.COMPACT\n    ) {\n      response.results.forEach((result, j) => {\n        const data = [];\n        result.data.dataset.forEach((r) => {\n          const row = {};\n          result.data.members.forEach((m, i) => {\n            row[m] = r[i];\n          });\n          data.push(row);\n        });\n        response.results[j].data = data;\n      });\n    }\n    return new ResultSet(response, {\n      parseDateMeasures: this.parseDateMeasures\n    });\n  }\n\n  /**\n   * Fetch data for the passed `query`. Operates with the\n   * `ApiGateway#load` method to fetch the data.\n   * @param {Query | Query[]} query\n   * @param {LoadMethodOptions | undefined} options\n   * @param {LoadMethodCallback<ResultSet> | undefined} callback\n   * @param {string} responseFormat\n   * @returns {undefined | Promise<ResultSet>}\n   */\n  load(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('load', {\n        query,\n        queryType: 'multi',\n      }),\n      this.loadResponseInternal.bind(this),\n      options,\n      callback\n    );\n  }\n\n  /**\n   * Allows you to fetch data and receive updates over time. Operates\n   * with the `ApiGateway#load` method to fetch the data.\n   * @link real-time-data-fetch\n   * @param {Query | Query[]} query\n   * @param {LoadMethodOptions | null} options\n   * @param {LoadMethodCallback<ResultSet> | undefined} callback\n   * @param {string} responseFormat\n   * @returns {void}\n   */\n  subscribe(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('subscribe', {\n        query,\n        queryType: 'multi',\n      }),\n      this.loadResponseInternal.bind(this),\n      { ...options, subscribe: true },\n      callback\n    );\n  }\n\n  sql(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('sql', { query }),\n      (response) => (Array.isArray(response) ? response.map((body) => new SqlQuery(body)) : new SqlQuery(response)),\n      options,\n      callback\n    );\n  }\n\n  meta(options, callback) {\n    return this.loadMethod(\n      () => this.request('meta'),\n      (body) => new Meta(body),\n      options,\n      callback\n    );\n  }\n\n  dryRun(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('dry-run', { query }),\n      (response) => response,\n      options,\n      callback\n    );\n  }\n}\n\nexport default (apiToken, options) => new CubejsApi(apiToken, options);\n\nexport { CubejsApi, HttpTransport, ResultSet };\nexport {\n  areQueriesEqual,\n  defaultHeuristics,\n  movePivotItem,\n  isQueryPresent,\n  moveItemInArray,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  getOrderMembersFromOrder,\n  GRANULARITIES\n} from './utils';\n"],"names":["DEFAULT_GRANULARITY","GRANULARITIES","name","undefined","title","areQueriesEqual","query1","query2","equals","Object","entries","order","defaultOrder","query","granularity","timeDimensions","find","d","dimension","measures","length","dimensions","defaultHeuristics","newState","oldQuery","options","clone","props","meta","sessionGranularity","state","newQuery","Array","isArray","td","defaultTimeDimension","defaultTimeDimensionNameFor","dateRange","pivotConfig","shouldApplyHeuristicOrder","chartType","map","filters","newChartType","isQueryPresent","every","q","movePivotItem","sourceIndex","destinationIndex","sourceAxis","destinationAxis","nextPivotConfig","x","y","id","lastIndex","splice","moveItemInArray","list","result","removed","flattenFilters","reduce","memo","filter","or","and","getQueryMembers","keys","members","Set","forEach","key","member","add","getOrderMembersFromOrder","orderMembers","ids","indexedOrderMembers","indexBy","prop","nextOrderMembers","memberId","currentOrder","push","has","aliasSeries","values","index","duplicateMeasures","nonNullValues","value","dayjs","extend","quarterOfYear","internalDayjs","locale","en","weekStart","TIME_SERIES","day","range","by","format","month","snapTo","year","hour","minute","second","week","startOf","quarter","DateRegex","LocalDateRegex","groupByToPairs","keyFn","acc","Map","data","row","set","get","from","unnest","arr","res","subArr","element","dayRange","to","results","start","end","isBefore","isSame","endOf","QUERY_TYPE","REGULAR_QUERY","COMPARE_DATE_RANGE_QUERY","BLENDING_QUERY","ResultSet","loadResponse","queryType","loadResponses","pivotQuery","includes","Error","parseDateMeasures","backwardCompatibleData","drillDownLocator","xValues","yValues","normalizedPivotConfig","normalizePivotConfig","currentIndex","parentFilters","segments","annotation","measureName","drillMembers","operator","split","cubeName","join","dt","toString","drillMembersGrouped","timezone","seriesNames","series","chartPivot","obj","axis","resultIndex","measure","concat","axisValues","delimiter","formatValue","v","getNormalizedPivotConfig","timeDimension","timeDimensionMember","dates","pipe","Boolean","timeDimensionBackwardCompatibleData","minBy","toDate","maxBy","padToDay","match","pivotImpl","groupByXAxis","axisValuesString","measureValue","fillMissingDates","timeSeries","rows","byXValues","groupBy","xGrouped","yValuesMap","allYValues","measureOnX","yGrouped","yValuesArray","measureFromAxis","pivots","_","mergePivots","joinDateRange","minLengthPivot","current","pivot","validate","test","Date","Number","isNaN","parseFloat","allMeasures","flatten","e","i","a","indexOf","m","isMeasuresPresent","fromPairs","annotations","pluck","mergeDeepLeft","flatMeta","b","schema","extractFields","shortTitle","type","currentItem","children","toColumns","item","path","fields","dimensionValue","dataIndex","trim","otherColumns","mergeAll","uniq","aliasedAxis","dropLast","field","defaultPivotConfig","substituteTimeDimensionMembers","subDim","allIncludedDimensions","allDimensions","dimensionFilter","unshift","SqlQuery","sqlQuery","sql","rawQuery","memberMap","memberArray","operators","string","number","time","Meta","metaResponse","cubes","cubesMap","c","memberType","sort","memberKeys","cube","cubeTitle","memberName","error","memberTypes","resolveMember","ProgressResult","progressResponse","stage","timeElapsed","HttpTransport","authorization","apiUrl","method","headers","credentials","baseRequestId","params","spanCounter","searchParams","URLSearchParams","k","_typeof","JSON","stringify","url","requestMethod","runRequest","fetch","Authorization","body","subscribe","callback","RequestError","message","response","status","mutexCounter","MUTEX_ERROR","ResultType","DEFAULT","COMPACT","mutexPromise","promise","Promise","resolve","reject","CubejsApi","apiToken","transport","pollInterval","updateAuthorizationPromise","request","uuidv4","toResult","mutexValue","mutexKey","mutexObj","requestPromise","updateTransportAuthorization","then","skipAuthorizationUpdate","unsubscribed","checkMutex","requestInstance","unsubscribe","loadImpl","next","subscribeNext","setTimeout","continueWait","wait","text","parse","progressCallback","token","responseFormat","j","dataset","r","patchQueryInternal","loadMethod","loadResponseInternal","bind"],"mappings":"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"}